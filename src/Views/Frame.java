/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Models.LexicalAnalyzer;
import Models.SyntacticAnalyzer;
import java.awt.Color;
import java.awt.FileDialog;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jmartinnavas
 */
public class Frame extends javax.swing.JFrame {

    String src;
    LinkedList<String> lista = new LinkedList<>();
    LinkedHashMap<String, String> mapa = new LinkedHashMap<>();
    int secuencia = 1;
    DefaultTableModel dtm = new DefaultTableModel();

    LinkedList<String> respuestas = new LinkedList<>();
    //RowsRenderer r = new RowsRenderer();

    public void lines(JTextArea area1, JTextArea area2) {
        int lines = area1.getLineCount() + 1;
        String text = "";
        for (int i = 1; i <= lines; i++) {
            text += i + "\n";
        }
        area2.setText(text);
    }

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        this.setTitle("An치lisis y Dise침o de Algoritmos");
        this.setLocationRelativeTo(this);
        this.jPanel3.setVisible(false);
        btncomplejidad.setEnabled(false);
        String[] titulo = new String[]{"Ayuda", "Linea", "Estado", "Costo", "Resultado"};
        String[] tituloau = new String[]{"Ayuda", "Linea", "Costo"};
        dtm.setColumnIdentifiers(titulo);
        lbllineaa침adir.setText("" + (cont + 1));
        tabladatos.setModel(dtm);
        btnverificar.setEnabled(false);
        btncalcular.setEnabled(false);
        txtcaptura.setEnabled(false);
        btnenviaratabla.setEnabled(false);
        btnreiniciar.setEnabled(false);
        lblrestantes.setText("" + restantes);

        //tablaauxiliar.setEnabled(false);
        //tabladatos.setDefaultRenderer(Object.class, r);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        Code = new javax.swing.JTextArea();
        linesCode = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        TextSyntactic = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btncomplejidad = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabladatos = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Comprobar = new javax.swing.JButton();
        btnverificar = new javax.swing.JButton();
        btncalcular = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lbllineaa침adir = new javax.swing.JLabel();
        btnenviaratabla = new javax.swing.JButton();
        txtcaptura = new javax.swing.JTextField();
        btnreiniciar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblrestantes = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CODE ANALYZER");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Consola");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        Code.setBackground(new java.awt.Color(229, 229, 229));
        Code.setColumns(20);
        Code.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Code.setRows(5);
        Code.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CodeKeyPressed(evt);
            }
        });

        linesCode.setEditable(false);
        linesCode.setBackground(new java.awt.Color(0, 0, 0));
        linesCode.setColumns(20);
        linesCode.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        linesCode.setForeground(new java.awt.Color(255, 255, 255));
        linesCode.setRows(5);
        linesCode.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(linesCode, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Code, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(629, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(linesCode, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Code, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jScrollPane3.setViewportView(jPanel2);

        TextSyntactic.setEditable(false);
        TextSyntactic.setBackground(new java.awt.Color(0, 0, 0));
        TextSyntactic.setColumns(20);
        TextSyntactic.setForeground(new java.awt.Color(0, 255, 0));
        TextSyntactic.setRows(5);
        TextSyntactic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane4.setViewportView(TextSyntactic);

        jButton1.setText("Analizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Borrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Guardar Archivo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cargar Archivo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btncomplejidad.setText("Compilar");
        btncomplejidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncomplejidadActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Area de Pseudocodigo");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(jLabel1)
                .addContainerGap(286, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btncomplejidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btncomplejidad, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        tabladatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Ayuda", "Linea", "Costo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabladatos);

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Analisis de Complejidad");
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(188, 188, 188))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        Comprobar.setText("Iniciar");
        Comprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprobarActionPerformed(evt);
            }
        });

        btnverificar.setText("Verificar Intento");
        btnverificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnverificarActionPerformed(evt);
            }
        });

        btncalcular.setText("Calificacion");
        btncalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncalcularActionPerformed(evt);
            }
        });

        jLabel5.setText("costo linea");

        btnenviaratabla.setText("Enviar");
        btnenviaratabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnenviaratablaActionPerformed(evt);
            }
        });

        btnreiniciar.setText("Volver a Intentar");
        btnreiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreiniciarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Intentos restantes:");

        lblrestantes.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btncalcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Comprobar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnverificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbllineaa침adir, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtcaptura, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnenviaratabla))
                    .addComponent(btnreiniciar))
                .addGap(117, 117, 117))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblrestantes, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(212, 212, 212))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblrestantes, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(Comprobar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lbllineaa침adir, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnenviaratabla)
                            .addComponent(txtcaptura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnverificar)
                    .addComponent(btnreiniciar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btncalcular)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Guardar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Cargar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Salir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Analizar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Limpiar");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem13.setText("Eliminar");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem13);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem1ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem1ActionPerformed

        FileWriter fw = null;
        try {
            FileDialog fd = new FileDialog(this, "Guardar", FileDialog.SAVE);
            fd.setFile("*.txt");
            fd.setVisible(true);
            if (fd.getDirectory() != null && fd.getFile() != null) {
                this.src = fd.getDirectory() + fd.getFile();
                fw = new FileWriter(this.src, true);
                fw.append(this.Code.getText()).flush();
                fw.close();
            }
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem3ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:

        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem2ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem2ActionPerformed
        FileDialog fd = new FileDialog(this, "Seleccionar Archivo", FileDialog.LOAD);
        fd.setVisible(true);

        this.src = fd.getDirectory() + fd.getFile();
        //this.src += fd.getFile();
        System.out.println(this.src);
        BufferedReader br;
        try {
            this.Code.setText("");
            br = new BufferedReader(new FileReader(new File(this.src)));
            String s;
            while ((s = br.readLine()) != null) {
                this.Code.append(s + "\n");
            }
            br.close();
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem4ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem4ActionPerformed

        String data = this.Code.getText();
        System.out.println(data);
        LexicalAnalyzer lexical = new LexicalAnalyzer(new BufferedReader(new StringReader(data)));
        SyntacticAnalyzer syntactic = new SyntacticAnalyzer(lexical);

        try {
            syntactic.parse();

            this.TextSyntactic.setText(syntactic.result);
            //System.out.println(lexical.showResult);
            //System.out.println(syntactic.result);
            // System.out.println(sintactico.resultado);
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem5ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem5ActionPerformed

        this.TextSyntactic.setText("");
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem13ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem13ActionPerformed
        this.Code.setText("");
        this.lines(this.Code, this.linesCode);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        FileDialog fd = new FileDialog(this, "Seleccionar Archivo", FileDialog.LOAD);
        fd.setVisible(true);

        this.src = fd.getDirectory() + fd.getFile();
        //this.src += fd.getFile();
        System.out.println(this.src);
        BufferedReader br;
        try {
            this.Code.setText("");
            br = new BufferedReader(new FileReader(new File(this.src)));
            String s;
            while ((s = br.readLine()) != null) {
                this.Code.append(s + "\n");
            }
            br.close();
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        FileWriter fw = null;
        try {
            FileDialog fd = new FileDialog(this, "Guardar", FileDialog.SAVE);
            fd.setFile("*.txt");
            fd.setVisible(true);
            if (fd.getDirectory() != null && fd.getFile() != null) {
                this.src = fd.getDirectory() + fd.getFile();
                fw = new FileWriter(this.src, true);
                fw.append(this.Code.getText()).flush();
                fw.close();
            }
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    //BOTON BORRAR
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        this.TextSyntactic.setText("");
        mapa.clear();
        lista.clear();
        secuencia = 1;
        jPanel3.setVisible(false);
        btncomplejidad.setEnabled(false);
        tabladatos.removeAll();
        dtm.setRowCount(0);
        respuestas.clear();

    }//GEN-LAST:event_jButton2ActionPerformed

    public void pintar() {
        ColorearFilas color = new ColorearFilas(4);
        tabladatos.getColumnModel().getColumn(4).setCellRenderer(color);
    }

    public void pintarOcultar() {
        ColorearFilas color = new ColorearFilas(2);
        tabladatos.getColumnModel().getColumn(2).setCellRenderer(color);
    }

    public void extraerLineas(String cadena) {
        StringTokenizer st = new StringTokenizer(cadena, "\n");
        while (st.hasMoreTokens()) {
            String line = st.nextToken();
            lista.add(line);
            llenado(line);
        }

        for (String key : mapa.keySet()) {
            String value = mapa.get(key);
            System.out.println("Key = " + key + ", Value = " + value);
        }
    }

    public void imprimirLista(LinkedList<String> lista) {
        for (int i = 0; i < lista.size(); i++) {
            System.out.println("lista en posicion:" + i + "igual a:" + lista.get(i));
        }

    }

    public void llenado(String lineacodigo) {
        String llave = "";
        LinkedList<String> lista = new LinkedList<>();
        String limpieza = "";
        limpieza = lineacodigo.trim();
        String[] bar = limpieza.split(" ");
        for (int i = 0; i < bar.length; i++) {
            lista.add(bar[i]);
        }

        llave = validacionesMapa(lista);
        mapa.put(llave, limpieza);

    }

    public String validacionesMapa(LinkedList<String> list) {
        String llave = "";

        if (list.contains("procedure") || list.contains("function")) {
            llave = secuencia + "-cabecera";
            secuencia++;
        } else if ((list.contains("<-")) && !(list.contains("for") || list.contains("while"))) {
            llave = secuencia + "-asignacion";
            secuencia++;
        } else if ((list.contains("int") || list.contains("string") || list.contains("char")
                || list.contains("boolean") || list.contains("float")) && !(list.contains("procedure") || list.contains("function"))) {
            llave = secuencia + "-declaracion";
            secuencia++;
        } else if ((list.contains("for") || lista.contains("while")) && !(list.contains("end"))) {
            llave = secuencia + "-ciclo";
            secuencia++;
        } else if ((list.contains("if") || lista.contains("else") || list.contains("switch")) && !(list.contains("end"))) {
            llave = secuencia + "-condicional";
            secuencia++;
        } else if (list.contains("print")) {
            llave = secuencia + "-imprimir";
            secuencia++;
        } else if (((list.contains("end")) && (list.contains("for")))) {
            llave = secuencia + "-finalfor";
            secuencia++;
        } else if (((list.contains("end")) && (list.contains("if")))) {
            llave = secuencia + "-finalif";
            secuencia++;
        } else if (list.contains("{*")) {
            llave = secuencia + "-LlamadoRecursivo";
            secuencia++;
        } else if (list.contains("retorno")) {
            llave = secuencia + "-retorno";
            secuencia++;
        } else {
            llave = secuencia + "-otro";
            secuencia++;
        }
        return llave;
    }

    void llenadoTabla() {
        for (String key : mapa.keySet()) {
            String value = mapa.get(key);
            dtm.addRow(new Object[]{
                key, value

            });

        }

    }

    public void complejidad() {
        int caso = 0;
        boolean banderaciclo1 = false;
        boolean banderaciclo2 = false;
        String fila;
        for (int i = 0; i < mapa.size(); i++) {

            String cadena = "";
            cadena = (String) dtm.getValueAt(i, 0);
            String[] cadenita = cadena.split("-");

            //lineas que no afectan el comportamiento 
            if ((cadenita[1].equals("cabecera") || cadenita[1].equals("otro")
                    || cadenita[1].equals("final"))) {

                dtm.setValueAt((Object) "---", i, 2);
                respuestas.add("---");
                //tabladatos.setBackground(Color.GREEN);
                //asignaciones y declaraciones que no estan adentro de ciclos   
            } else if (cadenita[1].equals("LlamadoRecursivo")) {
                dtm.setValueAt((Object) "na", i, 2);
                respuestas.add("na");
            } else if ((cadenita[1].equals("asignacion") || cadenita[1].equals("declaracion")
                    || cadenita[1].equals("imprimir") || cadenita[1].equals("retorno")
                    || cadenita[1].equals("condicional")) && !banderaciclo1) {

                dtm.setValueAt((Object) "c", i, 2);
                respuestas.add("c");
            } // es un solo ciclo 
            else if (cadenita[1].equals("ciclo") && !siguiente1("ciclo", i)) {
                banderaciclo1 = true;
                int ob = i + 1;
                System.out.println("hola perrito: " + mapa.get(ob + "-ciclo"));
                String[] cadenafor = mapa.get(ob + "-ciclo").split(" ");
                if (cadenafor[4].equals("1") && cadenafor[6].equals("n") && (dtm.getValueAt(i, 2) == null)) {
                    dtm.setValueAt((Object) "n+1", i, 2);
                    respuestas.add("n+1");
                    caso = 1;

                } else if (cadenafor[4].equals("1") && cadenafor[6].equals("n-1") && (dtm.getValueAt(i, 2) == null)) {
                    dtm.setValueAt((Object) "n", i, 2);
                    respuestas.add("n");
                    caso = 2;

                }

            } // declaraciones, asiganciones, condicionaes, print que esten dentro de 1 ciclo
            else if ((cadenita[1].equals("asignacion") || cadenita[1].equals("declaracion")
                    || cadenita[1].equals("imprimir") || cadenita[1].equals("retorno")
                    || cadenita[1].equals("condicional")) && banderaciclo1 && !banderaciclo2) {
                if (caso == 1) {
                    dtm.setValueAt((Object) "n", i, 2);
                    respuestas.add("n");
                } else if (caso == 2) {
                    dtm.setValueAt((Object) "n-1", i, 2);
                    respuestas.add("n-1");
                }

            } else if (cadenita[1].equals("finalif")) {
                dtm.setValueAt((Object) "---", i, 2);
                respuestas.add("---");
            } else if (cadenita[1].equals("finalfor") && !siguiente1("finalfor", i)) {
                banderaciclo1 = false;
                dtm.setValueAt((Object) "---", i, 2);
                respuestas.add("---");
            } else if (cadenita[1].equals("finalfor") && siguiente1("finalfor", i)) {
                banderaciclo1 = false;
                banderaciclo2 = false;
                dtm.setValueAt((Object) "---", i, 2);
                respuestas.add("---");
            } //es un ciclo for anidado
            else if (cadenita[1].equals("ciclo") && siguiente1("ciclo", i)) {
                banderaciclo1 = true;
                banderaciclo2 = true;
                int ob = i + 1;
                int ob2 = i + 2;
                String[] cadenafor1 = mapa.get(ob + "-ciclo").split(" ");
                String[] cadenafor2 = mapa.get(ob2 + "-ciclo").split(" ");
                if ((cadenafor1[4].equals("1") && cadenafor1[6].equals("n")) && (cadenafor2[4].equals("1") && cadenafor2[6].equals("n"))) {
                    dtm.setValueAt((Object) "n+1", i, 2);
                    dtm.setValueAt((Object) "n+n^2", i + 1, 2);
                    respuestas.add("n+1");
                    respuestas.add("n+n^2");
                    caso = 3;

                } else if ((cadenafor1[4].equals("1") && cadenafor1[6].equals("n")) && (cadenafor2[4].equals("1") && cadenafor2[6].equals("i"))) {
                    dtm.setValueAt((Object) "n+1", i, 2);
                    dtm.setValueAt((Object) "n^2", i + 1, 2);
                    respuestas.add("n+1");
                    respuestas.add("n^2");
                    caso = 4;
                } else if ((cadenafor1[4].equals("1") && cadenafor1[6].equals("n-1")) && (cadenafor2[4].equals("1") && cadenafor2[6].equals("n-1"))) {
                    dtm.setValueAt((Object) "n", i, 2);
                    dtm.setValueAt((Object) "n^2-n", i + 1, 2);
                    respuestas.add("n");
                    respuestas.add("n^2-n");
                    caso = 5;
                }
            } // declaraciones, asiganciones, condicionaes, print que esten dentro de un for anidado
            else if ((cadenita[1].equals("asignacion") || cadenita[1].equals("declaracion")
                    || cadenita[1].equals("imprimir") || cadenita[1].equals("retorno")
                    || cadenita[1].equals("condicional")) && banderaciclo1 && banderaciclo2) {
                switch (caso) {
                    case 3:
                        dtm.setValueAt((Object) "n^2", i, 2);
                        respuestas.add("n^2");
                        break;
                    case 4:
                        dtm.setValueAt((Object) "n^2-1", i, 2);
                        respuestas.add("n^2-1");
                        break;
                    case 5:
                        dtm.setValueAt((Object) "n^2-1", i, 2);
                        respuestas.add("n^2-1");
                        break;
                    default:
                        break;
                }

            }

            //System.out.println( dtm.getValueAt(i, 0));
        }
    }

    //es un doble for anidado ? 
    public boolean siguiente1(String llave, int i) {
        int filasig = i + 1;
        String cadena = (String) dtm.getValueAt(filasig, 0);
        String[] cadenita = cadena.split("-");

        return cadenita[1].equals(llave);
    }

    //es un triple for anidado ? 
    public boolean siguiente2(String llave, int i) {
        int filasig = i + 2;
        String cadena = (String) dtm.getValueAt(filasig, 0);
        String[] cadenita = cadena.split("-");
        return cadenita[1].equals(llave);
    }

    public void verificarRespuestas() {
        for (int i = 0; i < respuestas.size(); i++) {
            if (respuestas.get(i).equals(dtm.getValueAt(i, 3))) {
                System.out.println("lista:" + respuestas.get(i) + "tabla:" + dtm.getValueAt(i, 3));
                //dtm.setValueAt((Object) "Correcto", i, 3);
                tabladatos.setValueAt((Object) "Correcto", i, 4);

            } else {
                System.out.println("respuesta mala");
                System.out.println("lista:" + respuestas.get(i) + "tabla:" + dtm.getValueAt(i, 3));
                // dtm.setValueAt((Object) "Incorrecto", i, 3);
                tabladatos.setValueAt((Object) "Incorrecto", i, 4);
            }

            //txtintentos.setText(String.valueOf(intentos));
        }
        pintar();
    }

    //BOTON ANALIZAR
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String data = this.Code.getText();
        System.out.println("Hola Papi:  " + data);
        LexicalAnalyzer lexical = new LexicalAnalyzer(new BufferedReader(new StringReader(data)));
        SyntacticAnalyzer syntactic = new SyntacticAnalyzer(lexical);

        try {
            syntactic.parse();

            this.TextSyntactic.setText(lexical.showResult + "\n" + syntactic.result);
            if (syntactic.result2 == "true") {
                extraerLineas(data);
                btncomplejidad.setEnabled(true);

            }
            System.out.println("---------------------------------------------------------------");

            //System.out.println(lexical.showResult);
            //System.out.println(syntactic.result);
            // System.out.println(sintactico.resultado);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CodeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            this.lines(this.Code, this.linesCode);
        }
    }//GEN-LAST:event_CodeKeyPressed

    //BOTON COMPLEJIDAD
    private void btncomplejidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncomplejidadActionPerformed

        this.jPanel3.setVisible(true);

        //IntentosComplejidad();
        llenadoTabla();

    }//GEN-LAST:event_btncomplejidadActionPerformed

    //BOTON COMPROBAR
    private void ComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprobarActionPerformed
        btnverificar.setEnabled(true);
        btncalcular.setEnabled(true);
        txtcaptura.setEnabled(true);
        btnenviaratabla.setEnabled(true);
        btnreiniciar.setEnabled(true);
        complejidad();
        pintarOcultar();
        System.out.println("lista respuestas: " + respuestas.size());
        System.out.println(respuestas);


    }//GEN-LAST:event_ComprobarActionPerformed
//BOTON VERIFICAR INTENTO
    private void btnverificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnverificarActionPerformed

        System.out.println("tama침o perrito" + respuestas.size());
        System.out.println("lista resp" + respuestas);

        verificarRespuestas();


    }//GEN-LAST:event_btnverificarActionPerformed

    private void btncalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncalcularActionPerformed
        int total = respuestas.size();
        int correcta = 0;
        for (int i = 0; i < respuestas.size(); i++) {
            if (tabladatos.getValueAt(i, 4).equals("Correcto")) {
                correcta++;

            }
        }
        Double nota = (5.0 * correcta) / total;
        JOptionPane.showMessageDialog(null, "Calificacion: " + correcta + "/" + total + " correctas" + "\n" + "Nota: " + nota, "Calificacion",
                JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btncalcularActionPerformed
    int cont = 0;

    private void btnenviaratablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnenviaratablaActionPerformed
        String tex = txtcaptura.getText();

        dtm.setValueAt((Object) tex, cont, 3);

        txtcaptura.setText("");
        cont++;
        lbllineaa침adir.setText("" + (cont + 1));
    }//GEN-LAST:event_btnenviaratablaActionPerformed

    int restantes = 3;
    private void btnreiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreiniciarActionPerformed
        if (restantes != 0) {
            cont = 0;
            lbllineaa침adir.setText("" + (cont + 1));
            restantes--;
            lblrestantes.setText("" + restantes);
        }
        if (restantes == 0) {
            btnreiniciar.setEnabled(false);
            txtcaptura.setEnabled(false);
            btnenviaratabla.setEnabled(false);
            JOptionPane.showMessageDialog(rootPane, "Las respuestas correctas son:"+ respuestas);
        }
        //tabladatos.removeAll();
        //dtm.setRowCount(0);
        //respuestas.clear();
        //cont = 0;
        //lbllineaa침adir.setText("" + (cont + 1));

        //tabladatos.removeAll();
        //dtm.setRowCount(0);
        //respuestas.clear();
        //cont = 0;
        //lbllineaa침adir.setText("" + (cont + 1));
    }//GEN-LAST:event_btnreiniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Code;
    private javax.swing.JButton Comprobar;
    private javax.swing.JTextArea TextSyntactic;
    private javax.swing.JButton btncalcular;
    private javax.swing.JButton btncomplejidad;
    private javax.swing.JButton btnenviaratabla;
    private javax.swing.JButton btnreiniciar;
    private javax.swing.JButton btnverificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbllineaa침adir;
    private javax.swing.JLabel lblrestantes;
    private javax.swing.JTextArea linesCode;
    private javax.swing.JTable tabladatos;
    private javax.swing.JTextField txtcaptura;
    // End of variables declaration//GEN-END:variables

}
