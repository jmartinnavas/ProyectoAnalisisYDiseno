/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import java.awt.Color;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author JMartinNavas
 */
public class Seguimiento extends javax.swing.JFrame {

    LinkedHashMap<String, String> mapa = new LinkedHashMap<>();
    LinkedList<String> respuestas = new LinkedList<>();

    private Highlighter.HighlightPainter painter;

    /**
     * Creates new form Seguimiento
     */
    public Seguimiento() {
        initComponents();
    }

    public Seguimiento(LinkedHashMap<String, String> mapa, LinkedList<String> respuestas) {
        this.mapa = mapa;
        this.respuestas = respuestas;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tarea = new javax.swing.JTextArea();
        btnpaso = new javax.swing.JButton();
        btnarrancar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtn = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tarea.setColumns(20);
        tarea.setRows(5);
        jScrollPane1.setViewportView(tarea);

        btnpaso.setText("PASO");
        btnpaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpasoActionPerformed(evt);
            }
        });

        btnarrancar.setText("Arrancar");
        btnarrancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnarrancarActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnarrancar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnpaso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(txtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnarrancar)
                .addGap(26, 26, 26)
                .addComponent(btnpaso)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(28, 28, 28)
                .addComponent(txtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int startIndex = 0;
    int endIndex = 0;

    boolean banderaFor = false;
    int volver = 0;
    int linea = 0;
    boolean banderaendfot = false;
    private void btnpasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpasoActionPerformed
        //String value = mapa.get("1-cabecera");
        //System.out.println("value="+value);

        String llave = (linea + 1) + "-ciclo";

        if (mapa.get(llave) != null) {
            banderaFor = true;
            volver = linea;
        }
        
        String llaveendciclo = (linea + 1) + "-finalfor";
        if (mapa.get(llaveendciclo) != null) {
            banderaendfot=true;

        }

        if (banderaFor == false) {
            tarea.getHighlighter().removeAllHighlights();
            try {
                linea++;
                startIndex = tarea.getLineStartOffset(linea);
                endIndex = tarea.getLineEndOffset(linea);
            } catch (BadLocationException ex) {
                Logger.getLogger(Seguimiento.class.getName()).log(Level.SEVERE, null, ex);
            }
            painter = new DefaultHighlighter.DefaultHighlightPainter(Color.GREEN);

            try {
                tarea.getHighlighter().addHighlight(startIndex, endIndex, painter);
            } catch (BadLocationException ex) {
                Logger.getLogger(Seguimiento.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (banderaFor == true && banderaendfot==false) {
            //volver = linea;
            System.out.println("ESTOY DENTRO DE UN CICLO");
            tarea.getHighlighter().removeAllHighlights();
            try {
                linea++;
                startIndex = tarea.getLineStartOffset(linea);
                endIndex = tarea.getLineEndOffset(linea);
            } catch (BadLocationException ex) {
                Logger.getLogger(Seguimiento.class.getName()).log(Level.SEVERE, null, ex);
            }
            painter = new DefaultHighlighter.DefaultHighlightPainter(Color.GREEN);

            try {
                tarea.getHighlighter().addHighlight(startIndex, endIndex, painter);
            } catch (BadLocationException ex) {
                Logger.getLogger(Seguimiento.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        
         if (banderaFor == true && banderaendfot==true) {
            //volver = linea;
            System.out.println("ESTOY DENTRO DE un ciclo");
            tarea.getHighlighter().removeAllHighlights();
            try {
                linea = volver;
                startIndex = tarea.getLineStartOffset(volver);
                endIndex = tarea.getLineEndOffset(volver);
            } catch (BadLocationException ex) {
                Logger.getLogger(Seguimiento.class.getName()).log(Level.SEVERE, null, ex);
            }
            painter = new DefaultHighlighter.DefaultHighlightPainter(Color.GREEN);

            try {
                tarea.getHighlighter().addHighlight(startIndex, endIndex, painter);
            } catch (BadLocationException ex) {
                Logger.getLogger(Seguimiento.class.getName()).log(Level.SEVERE, null, ex);
            }

            banderaendfot=false;
        }

        

    }//GEN-LAST:event_btnpasoActionPerformed

    private void btnarrancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnarrancarActionPerformed
        // TODO add your handling code here:

        try {
            startIndex = tarea.getLineStartOffset(linea);
            endIndex = tarea.getLineEndOffset(linea);
        } catch (BadLocationException ex) {
            Logger.getLogger(AnalisisLineaALinea.class.getName()).log(Level.SEVERE, null, ex);
        }

        painter = new DefaultHighlighter.DefaultHighlightPainter(Color.GREEN);
        try {
            tarea.getHighlighter().addHighlight(startIndex, endIndex, painter);
        } catch (BadLocationException ex) {
            Logger.getLogger(AnalisisLineaALinea.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnarrancar.setEnabled(false);
    }//GEN-LAST:event_btnarrancarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setEnabled(false);
        this.setVisible(false);

        System.out.println(tarea.getText());
        System.out.println("----------DATOS DESDE EL FRAME SEGUIMIENTO---------");
        System.out.println("respuestas:");
        System.out.println(respuestas);

        System.out.println("mapa:");
        for (String key : mapa.keySet()) {
            String value = mapa.get(key);
            System.out.println("Key = " + key + ", Value = " + value);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Seguimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Seguimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Seguimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Seguimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Seguimiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnarrancar;
    private javax.swing.JButton btnpaso;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea tarea;
    private javax.swing.JTextField txtn;
    // End of variables declaration//GEN-END:variables
}
